---
import { getCollection } from 'astro:content'
import FormattedDate from './FormattedDate.astro'
import Tags from './Tags.astro'

let posts = (await getCollection('blog')).sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())

if (Astro.props.featured) {
  posts = posts.filter(p => p.data.featured)
}

if (Astro.props.posts) {
  posts = Astro.props.posts
}

const post = posts[0]

// Note: Below, we do the first if branch if there are multiple posts, or if it there are posts as props.
// We have posts as props when we are in a tag page, and in that case, it looks better to have a single
// post be aligned to the left rather then center.
---

{
  posts.length > 1 || Astro.props.posts ? (
    <div class='grid grid-cols-1 lg:grid-cols-2 gap-4'>
      {posts.map(post => (
        <article class='p-4'>
          <FormattedDate date={post.data.pubDate} />
          <a href={`/blog/${post.slug}/`}>
            <h3 class='text-2xl font-semibold tracking-tight text-gray-800 pt-4 md:pt-0 hover:underline'>
              {post.data.title}
            </h3>
          </a>
          <div class='mt-2 mb-1 text-gray-500 font-Inconsolata leading-tight max-w-xl'>{post.data.description}</div>
          <Tags tags={post.data.tags} />
          <a href={`/blog/${post.slug}/`} class='flex items-center text-sm text-indigo-950 font-medium mt-5'>
            <span class='relative underline'>Read more</span>
            <svg
              class='relative mt-px overflow-visible ml-2 text-indigo-950'
              width='3'
              height='6'
              viewBox='0 0 3 6'
              fill='none'
              stroke='currentColor'
              stroke-width='2'
              stroke-linecap='round'
              stroke-line-join='round'
            >
              <path d='M0 0L3 3L0 6' />
            </svg>
          </a>
        </article>
      ))}
    </div>
  ) : (
    <article class='p-4 mx-auto max-w-2xl'>
      <FormattedDate date={post.data.pubDate} />
      <a href={`/blog/${post.slug}/`}>
        <h3 class='text-2xl font-semibold tracking-tight text-gray-800 pt-4 md:pt-0 hover:underline'>
          {post.data.title}
        </h3>
      </a>
      <div class='mt-2 mb-1 text-gray-500 font-Inconsolata leading-tight max-w-xl'>{post.data.description}</div>
      <Tags tags={post.data.tags} />
      <a href={`/blog/${post.slug}/`} class='flex items-center text-sm text-indigo-950 font-medium mt-5'>
        <span class='relative underline'>Read more</span>
        <svg
          class='relative mt-px overflow-visible ml-2 text-indigo-950'
          width='3'
          height='6'
          viewBox='0 0 3 6'
          fill='none'
          stroke='currentColor'
          stroke-width='2'
          stroke-linecap='round'
          stroke-line-join='round'
        >
          <path d='M0 0L3 3L0 6' />
        </svg>
      </a>
    </article>
  )
}
